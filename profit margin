# Importing required libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Simulated dataset creation
data = {
    'City': ['Dhaka', 'Rajshahi', 'Dinajpur', 'Chittagong', 'Khulna', 'Sylhet', 'Barisal'],
    'Number_of_Centers': [1500, 400, 300, 1200, 500, 350, 200],
    'Average_Revenue_per_Center': [2000000, 1200000, 800000, 1800000, 1100000, 900000, 750000]
}

# Monthly expenditure for each city (simulated values in BDT)
# These could include rent, salaries, utilities, etc.
monthly_expenditure_data = {
    'City': ['Dhaka', 'Rajshahi', 'Dinajpur', 'Chittagong', 'Khulna', 'Sylhet', 'Barisal'],
    'Average_Monthly_Expenditure_per_Center': [500000, 300000, 200000, 450000, 350000, 250000, 200000]
}

# Creating DataFrames
df = pd.DataFrame(data)
expenditure_df = pd.DataFrame(monthly_expenditure_data)

# Calculating Total Revenue for each city
df['Total_Revenue'] = df['Number_of_Centers'] * df['Average_Revenue_per_Center']

# Calculating Total Monthly Expenditure for each city
expenditure_df['Total_Monthly_Expenditure'] = expenditure_df['Average_Monthly_Expenditure_per_Center'] * df['Number_of_Centers']

# Calculating Monthly Profit for each city (Revenue - Expenditure)
df['Total_Monthly_Expenditure'] = expenditure_df['Total_Monthly_Expenditure']
df['Monthly_Profit'] = df['Total_Revenue'] / 12 - df['Total_Monthly_Expenditure']

# Calculating Annual Profit for each city
df['Annual_Profit'] = df['Monthly_Profit'] * 12

# Displaying the DataFrames
print("City-wise Coaching Center Revenue, Expenditure, and Profit Data:\n")
print(df[['City', 'Total_Revenue', 'Total_Monthly_Expenditure', 'Monthly_Profit', 'Annual_Profit']])

# Visualizing the data

# Barplot for Total Revenue by City
plt.figure(figsize=(12, 6))
sns.barplot(x='City', y='Total_Revenue', data=df, palette='viridis')
plt.title('Annual Revenue Generated by Coaching Centers in Major Cities of Bangladesh', fontsize=16)
plt.xlabel('City', fontsize=12)
plt.ylabel('Total Revenue (BDT)', fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Barplot for Monthly Profit by City
plt.figure(figsize=(12, 6))
sns.barplot(x='City', y='Monthly_Profit', data=df, palette='magma')
plt.title('Monthly Profit of Coaching Centers in Major Cities', fontsize=16)
plt.xlabel('City', fontsize=12)
plt.ylabel('Monthly Profit (BDT)', fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Barplot for Annual Profit by City
plt.figure(figsize=(12, 6))
sns.barplot(x='City', y='Annual_Profit', data=df, palette='plasma')
plt.title('Annual Profit of Coaching Centers in Major Cities', fontsize=16)
plt.xlabel('City', fontsize=12)
plt.ylabel('Annual Profit (BDT)', fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Key observations on profits
max_profit_city = df.loc[df['Monthly_Profit'].idxmax()]
min_profit_city = df.loc[df['Monthly_Profit'].idxmin()]

print("\n--- Key Profit Observations ---")
print(f"City with Highest Monthly Profit: {max_profit_city['City']} (BDT {max_profit_city['Monthly_Profit']:,})")
print(f"City with Lowest Monthly Profit: {min_profit_city['City']} (BDT {min_profit_city['Monthly_Profit']:,})")

# Summary of annual profit comparison
max_annual_profit_city = df.loc[df['Annual_Profit'].idxmax()]
print(f"City with Highest Annual Profit: {max_annual_profit_city['City']} (BDT {max_annual_profit_city['Annual_Profit']:,})")

# Monthly expenditure comparison
plt.figure(figsize=(12, 6))
sns.barplot(x='City', y='Total_Monthly_Expenditure', data=df, palette='coolwarm')
plt.title('Total Monthly Expenditure of Coaching Centers in Major Cities', fontsize=16)
plt.xlabel('City', fontsize=12)
plt.ylabel('Total Monthly Expenditure (BDT)', fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
